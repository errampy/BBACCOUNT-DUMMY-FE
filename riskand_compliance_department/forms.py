from django import forms
from .models import *
from django.forms import DateInput, DateTimeInput, TimeInput, CheckboxInput, Textarea, TextInput


class ComplianceLiveForm(forms.Form):
	kyc_non_compliance_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	aml_monitoring_alerts = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	penalties_incurred = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audits_conducted = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_violations = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	compliance_training_sessions = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	training_attendees = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ComplianceTempForm(forms.Form):
	kyc_non_compliance_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	aml_monitoring_alerts = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	penalties_incurred = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audits_conducted = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_violations = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	compliance_training_sessions = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	training_attendees = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ComplianceTempPAForm(forms.Form):
	kyc_non_compliance_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	aml_monitoring_alerts = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	penalties_incurred = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audits_conducted = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_violations = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	compliance_training_sessions = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	training_attendees = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ComplianceTempUpdateForm(forms.Form):
	kyc_non_compliance_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	aml_monitoring_alerts = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	penalties_incurred = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audits_conducted = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_violations = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	compliance_training_sessions = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	training_attendees = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ComplianceLiveUpdateForm(forms.Form):
	kyc_non_compliance_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	aml_monitoring_alerts = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	penalties_incurred = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audits_conducted = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_violations = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	compliance_training_sessions = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	training_attendees = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	compliance_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))

class FraudMonitoringLiveForm(forms.Form):
	detected_fraud_incidents = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_amount_involved = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_status_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	open_fraud_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	fraud_detection_methods = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	fraud_prevention_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	investigation_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class FraudMonitoringTempForm(forms.Form):
	detected_fraud_incidents = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_amount_involved = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_status_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	open_fraud_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	fraud_detection_methods = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	fraud_prevention_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	investigation_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class FraudMonitoringTempPAForm(forms.Form):
	detected_fraud_incidents = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_amount_involved = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_status_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	open_fraud_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	fraud_detection_methods = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	fraud_prevention_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	investigation_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class FraudMonitoringTempUpdateForm(forms.Form):
	detected_fraud_incidents = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_amount_involved = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_status_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	open_fraud_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	fraud_detection_methods = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	fraud_prevention_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	investigation_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class FraudMonitoringLiveUpdateForm(forms.Form):
	detected_fraud_incidents = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_amount_involved = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_status_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	open_fraud_cases = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	fraud_detection_methods = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	fraud_prevention_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	investigation_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))

class RiskAssessmentLiveForm(forms.Form):
	top_risks = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	mitigation_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	residual_risk_level = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_review_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	incidents_tracked = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_owner = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	risk_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class RiskAssessmentTempForm(forms.Form):
	top_risks = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	mitigation_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	residual_risk_level = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_review_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	incidents_tracked = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_owner = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	risk_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class RiskAssessmentTempPAForm(forms.Form):
	top_risks = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	mitigation_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	residual_risk_level = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_review_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	incidents_tracked = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_owner = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	risk_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class RiskAssessmentTempUpdateForm(forms.Form):
	top_risks = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	mitigation_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	residual_risk_level = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_review_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	incidents_tracked = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_owner = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	risk_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class RiskAssessmentLiveUpdateForm(forms.Form):
	top_risks = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	mitigation_actions = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	residual_risk_level = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_review_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	incidents_tracked = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_owner = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	risk_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
