from django import forms
from .models import *
from django.forms import DateInput, DateTimeInput, TimeInput, CheckboxInput, Textarea, TextInput


class DataAccuracyLiveForm(forms.Form):
	errors_detected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	corrected_entries_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audit_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	system_generated_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	manual_input_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	accuracy_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class DataAccuracyTempForm(forms.Form):
	errors_detected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	corrected_entries_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audit_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	system_generated_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	manual_input_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	accuracy_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class DataAccuracyTempPAForm(forms.Form):
	errors_detected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	corrected_entries_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audit_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	system_generated_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	manual_input_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	accuracy_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class DataAccuracyTempUpdateForm(forms.Form):
	errors_detected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	corrected_entries_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audit_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	system_generated_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	manual_input_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	accuracy_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class DataAccuracyLiveUpdateForm(forms.Form):
	errors_detected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	corrected_entries_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	audit_frequency = forms.CharField(max_length=50, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	system_generated_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	manual_input_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_errors = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	accuracy_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))

class SystemUptimeLiveForm(forms.Form):
	total_downtime_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	uptime_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	scheduled_maintenance_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	unscheduled_outage_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_systems_affected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	system_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class SystemUptimeTempForm(forms.Form):
	total_downtime_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	uptime_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	scheduled_maintenance_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	unscheduled_outage_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_systems_affected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	system_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class SystemUptimeTempPAForm(forms.Form):
	total_downtime_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	uptime_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	scheduled_maintenance_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	unscheduled_outage_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_systems_affected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	system_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class SystemUptimeTempUpdateForm(forms.Form):
	total_downtime_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	uptime_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	scheduled_maintenance_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	unscheduled_outage_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_systems_affected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	system_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class SystemUptimeLiveUpdateForm(forms.Form):
	total_downtime_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	uptime_percentage = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	scheduled_maintenance_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	unscheduled_outage_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	critical_systems_affected = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	system_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))

class ITTicketResolutionLiveForm(forms.Form):
	tickets_raised = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	tickets_resolved = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_resolution_time_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	high_priority_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	unresolved_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	escalation_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ITTicketResolutionTempForm(forms.Form):
	tickets_raised = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	tickets_resolved = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_resolution_time_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	high_priority_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	unresolved_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	escalation_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ITTicketResolutionTempPAForm(forms.Form):
	tickets_raised = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	tickets_resolved = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_resolution_time_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	high_priority_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	unresolved_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	escalation_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ITTicketResolutionTempUpdateForm(forms.Form):
	tickets_raised = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	tickets_resolved = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_resolution_time_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	high_priority_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	unresolved_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	escalation_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ITTicketResolutionLiveUpdateForm(forms.Form):
	tickets_raised = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	tickets_resolved = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_resolution_time_hours = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	high_priority_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	unresolved_tickets = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	escalation_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	resolution_comments = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
