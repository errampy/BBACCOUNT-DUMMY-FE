from django import forms
from .models import *
from django.forms import DateInput, DateTimeInput, TimeInput, CheckboxInput, Textarea, TextInput


class LoanDisbursementLiveForm(forms.Form):
	total_loans_disbursed = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	number_of_loans = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_size = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	highest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	lowest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loan_purpose_distribution = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	disbursement_channels = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class LoanDisbursementTempForm(forms.Form):
	total_loans_disbursed = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	number_of_loans = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_size = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	highest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	lowest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loan_purpose_distribution = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	disbursement_channels = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class LoanDisbursementTempPAForm(forms.Form):
	total_loans_disbursed = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	number_of_loans = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_size = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	highest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	lowest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loan_purpose_distribution = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	disbursement_channels = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class LoanDisbursementTempUpdateForm(forms.Form):
	total_loans_disbursed = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	number_of_loans = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_size = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	highest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	lowest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loan_purpose_distribution = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	disbursement_channels = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class LoanDisbursementLiveUpdateForm(forms.Form):
	total_loans_disbursed = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	number_of_loans = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_size = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	highest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	lowest_loan_disbursed = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loan_purpose_distribution = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	disbursement_channels = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))

class PortfolioQualityLiveForm(forms.Form):
	portfolio_at_risk = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_outstanding_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	amount_overdue = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loans_at_risk_count = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_categorization = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	recovery_rate = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_age = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class PortfolioQualityTempForm(forms.Form):
	portfolio_at_risk = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_outstanding_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	amount_overdue = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loans_at_risk_count = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_categorization = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	recovery_rate = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_age = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class PortfolioQualityTempPAForm(forms.Form):
	portfolio_at_risk = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_outstanding_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	amount_overdue = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loans_at_risk_count = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_categorization = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	recovery_rate = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_age = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class PortfolioQualityTempUpdateForm(forms.Form):
	portfolio_at_risk = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_outstanding_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	amount_overdue = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loans_at_risk_count = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_categorization = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	recovery_rate = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_age = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
class PortfolioQualityLiveUpdateForm(forms.Form):
	portfolio_at_risk = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_outstanding_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	amount_overdue = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	loans_at_risk_count = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	risk_categorization = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	recovery_rate = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_loan_age = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))

class ClientOutreachLiveForm(forms.Form):
	active_clients = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_quarter = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	client_retention_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_client_loan_size = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	inactive_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	outreach_campaigns = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	client_feedback_summary = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ClientOutreachTempForm(forms.Form):
	active_clients = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_quarter = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	client_retention_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_client_loan_size = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	inactive_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	outreach_campaigns = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	client_feedback_summary = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ClientOutreachTempPAForm(forms.Form):
	active_clients = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_quarter = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	client_retention_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_client_loan_size = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	inactive_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	outreach_campaigns = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	client_feedback_summary = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ClientOutreachTempUpdateForm(forms.Form):
	active_clients = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_quarter = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	client_retention_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_client_loan_size = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	inactive_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	outreach_campaigns = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	client_feedback_summary = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
class ClientOutreachLiveUpdateForm(forms.Form):
	active_clients = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_quarter = forms.IntegerField(required=True,widget=forms.NumberInput(attrs={"class": "form-control"}))
	client_retention_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	average_client_loan_size = forms.FloatField(required=False, widget=forms.NumberInput(attrs={"class": "form-control"}))
	inactive_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	outreach_campaigns = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))
	client_feedback_summary = forms.CharField( required=True, widget=forms.Textarea(attrs={"class": "form-control"}))

class BranchPerformanceLiveForm(forms.Form):
	branch_name = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	loan_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	repayment_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_month = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	branch_location = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	branch_manager = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
class BranchPerformanceTempForm(forms.Form):
	branch_name = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	loan_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	repayment_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_month = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	branch_location = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	branch_manager = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
class BranchPerformanceTempPAForm(forms.Form):
	branch_name = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	loan_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	repayment_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_month = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	branch_location = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	branch_manager = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
class BranchPerformanceTempUpdateForm(forms.Form):
	branch_name = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	loan_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	repayment_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_month = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	branch_location = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	branch_manager = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
class BranchPerformanceLiveUpdateForm(forms.Form):
	branch_name = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	loan_portfolio = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	repayment_rate = forms.FloatField(required=True, widget=forms.NumberInput(attrs={"class": "form-control"}))
	total_clients = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	new_clients_this_month = forms.IntegerField(required=False,widget=forms.NumberInput(attrs={"class": "form-control"}))
	reported_date = forms.DateField(required=True, widget=forms.DateInput(attrs={"type": "date","class": "form-control"}))
	branch_location = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
	branch_manager = forms.CharField(max_length=255, required=True, widget=forms.TextInput(attrs={"class": "form-control"}))
